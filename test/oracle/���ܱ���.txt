each_with_index比较花时间，如果本数组太大要小心使用。宁可自己加index。
可以省13秒
只开
      if value == S64_16_ARR.first
        r_arr << [1,INTER_SIZE-1]
        return r_arr
      elsif value == 0
        return r_arr
花35秒，把0处理判断放在上面只要17
处理全开98


光调用get_block_64，要3。6秒。
不调用get_block_64，要4秒。
value == 0基本不花时间
value == S64_16_ARR.first花1秒。
不做返回，要7。6
只是返回，要8秒。
光做value == 0，也要
运行这个get_block_single_16(value,tmp_arr,1,16)，要187秒，
可见连续的判断帮助很大。

调用
      if (value & F64_ARR[5]) != 0 
        tmp_arr << [6,1]
      end
12-4 = 8

100w ruby1.9 64bin  16
      user     system      total        real
get  15.375000   0.015000  15.390000 ( 15.437500)
sort 24.672000   0.172000  24.844000 ( 24.875000)
"ok"
100w ruby1.9 64bin  8
      user     system      total        real
get  15.422000   0.047000  15.469000 ( 15.468750)
sort 23.172000   0.141000  23.313000 ( 23.390625)
"ok"
100w ruby1.9 128bin 32
      user     system      total        real
get  12.985000   0.188000  13.173000 ( 13.281250)
sort 43.672000   0.266000  43.938000 ( 44.296875)
"ok"
100w ruby1.9 128bin 16
      user     system      total        real
get  13.281000   0.062000  13.343000 ( 13.375000)
sort 36.329000   0.235000  36.564000 ( 36.609375)
"ok"
1000w ruby1.9 64bin 16
      user     system      total        real
get  105
sort 224
"ok"
1000w ruby1.9 64bin 8
      user     system      total        real
get 110.812000   0.453000 111.265000 (111.734375)
sort211.438000   1.078000 212.516000 (214.171875)
"ok"

100w ruby1.9 64bin 8 ignore_single
      user     system      total        real
get  15.219000   0.110000  15.329000 ( 15.375000)
sort 18.109000   0.187000  18.296000 ( 18.328125)
"ok"
1000w ruby1.9 64bin 8 ignore_single
      user     system      total        real
get 109.094000   0.640000 109.734000 (110.031250)
sort162.032000   1.110000 163.142000 (163.625000)
"ok"
1000w ruby1.9 64bin 8 ignore_single, max_block_number=2^19
      user     system      total        real
get  99.844000   0.469000 100.313000 (100.609375)
sort 46.796000   0.812000  47.608000 ( 47.921875)
"ok"
1000w ruby1.9 8bin 8 ignore_single_2, max_block_number=2^19
      user     system      total        real
get 114.641000   0.500000 115.141000 (115.718750)
sort 82.281000   0.515000  82.796000 ( 83.015625)
"ok"
1000w ruby1.9 64bin 8 ignore_single, max_block_number=2^19
only readline txt
get  62.547000   0.328000  62.875000 ( 63.203125)

8bin 8 只做0的比较
sort  1.516000   0.000000   1.516000 (  1.515625)
64bin 8 只做0的比较
sort  1.094000   0.000000   1.094000 (  1.093750)
1000w ruby1.9 512 64bin 8 ignore_single_3, max_block_number=2^19
      user     system      total        real
get 110.484000   0.422000 110.906000 (111.234375)
sort 57.454000   0.578000  58.032000 ( 58.140625)
"ok"
